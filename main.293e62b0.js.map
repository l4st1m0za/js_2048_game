{"version":3,"sources":["scripts/main.js"],"names":["cells","document","querySelectorAll","scoreField","querySelector","button","messageStart","messageLose","messageWin","row","column","score","field","randomInt","max","Math","floor","random","randomProbability","toFixed","addRandomNumber","gameField","emptyCells","i","j","push","length","randomIndex","randomIndexes","updateScore","gameScore","innerHTML","renderField","gameWin","gameFieldIndex","cell","fieldValue","classList","add","showmessageWin","isGameOver","contains","replace","innerText","remove","hasEmptyCell","buttonHandler","toggle","moveCell","directionI","directionJ","newI","currentI","currentJ","newJ","moveUp","mergeUp","moveDown","mergeDown","moveRight","mergeRight","moveLeft","mergeLeft","move","e","fieldCopy","map","arr","slice","key","isFieldChanged","gameFieldUpdated","addEventListener","body"],"mappings":"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","file":"main.293e62b0.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst cells = document.querySelectorAll('.field-cell');\nconst scoreField = document.querySelector('.game-score');\nconst button = document.querySelector('button');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\n\nconst row = 4;\nconst column = 4;\nlet score = 0;\n\nlet field = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nbutton.addEventListener('click', buttonHandler);\ndocument.body.addEventListener('keydown', move);\n\nfunction randomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nfunction randomProbability() {\n  return (Math.random() * 1.01).toFixed(2);\n}\n\nfunction addRandomNumber(gameField) {\n  const emptyCells = [];\n\n  for (let i = 0; i < row; i++) {\n    for (let j = 0; j < column; j++) {\n      if (gameField[i][j] === 0) {\n        emptyCells.push([i, j]);\n      }\n    }\n  }\n\n  if (emptyCells.length === 0) {\n    return;\n  }\n\n  const randomIndex = randomInt(emptyCells.length);\n  const randomIndexes = emptyCells[randomIndex];\n\n  if (randomProbability() < 0.9) {\n    gameField[randomIndexes[0]][randomIndexes[1]] = 2;\n  } else {\n    gameField[randomIndexes[0]][randomIndexes[1]] = 4;\n  }\n}\n\n  function updateScore(gameScore) {\n    scoreField.innerHTML = `${gameScore}`;\n  }\n\nfunction renderField(gameField) {\n  let gameWin = false;\n  let gameFieldIndex = 0;\n\n  for (const cell of cells) {\n    const i = Math.floor(gameFieldIndex / row);\n    const j = gameFieldIndex % column;\n    const fieldValue = gameField[i][j];\n\n    gameFieldIndex++;\n\n    cell.classList = 'field-cell';\n\n    if (fieldValue === 0) {\n      cell.innerHTML = '';\n    } else {\n      cell.innerHTML = fieldValue;\n      cell.classList.add(`field-cell--${fieldValue}`);\n    }\n\n    gameWin = fieldValue === 2048;\n  }\n\n  if (gameWin) {\n    showmessageWin();\n  }\n\n  updateScore(score);\n\n  if (isGameOver(gameField)) {\n    if (button.classList.contains('restart')) {\n      button.classList.replace('restart', 'start');\n      button.innerText = 'Start';\n    }\n    messageLose.classList.remove('hidden');\n  }\n}\n\nfunction hasEmptyCell(gameField) {\n  for (let i = 0; i < row; i++) {\n    for (let j = 0; j < column; j++) {\n      if (gameField[i][j] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction isGameOver(gameField) {\n  if (hasEmptyCell(gameField)) {\n    return false;\n  }\n\n  for (let i = 0; i < row; i++) {\n    for (let j = 0; j < column - 1; j++) {\n      if (gameField[i][j] === gameField[i][j + 1]) {\n        return false;\n      }\n    }\n  }\n\n  for (let i = 0; i < row - 1; i++) {\n    for (let j = 0; j < column; j++) {\n      if (gameField[i][j] === gameField[i + 1][j]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction showmessageWin() {\n  messageWin.classList.remove('hidden');\n}\n\nfunction buttonHandler() {\n  field = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0]\n  ];\n\n  score = 0;\n  messageLose.classList.toggle('hidden', true);\n  messageWin.classList.toggle('hidden', true);\n\n  if (button.classList.contains('start')) {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.innerText = 'Restart';\n    messageStart.classList.add('hidden');\n  }\n\n  addRandomNumber(field);\n  addRandomNumber(field);\n  renderField(field);\n}\n\nfunction moveCell(gameField, i, j, directionI, directionJ) {\n  let currentI = i;\n  let currentJ = j;\n  let newI = i + directionI;\n  let newJ = j + directionJ;\n\n  while (newI >= 0 && newI < 4 && newJ >= 0 && newJ < 4\n    && !gameField[newI][newJ]) {\n    gameField[newI][newJ] = gameField[currentI][currentJ];\n    gameField[currentI][currentJ] = 0;\n    currentI = newI;\n    currentJ = newJ;\n    newI += directionI;\n    newJ += directionJ;\n  }\n}\n\nfunction moveUp(gameField) {\n  for (let i = 0; i < row; i++) {\n    for (let j = 0; j < column; j++) {\n      if (!gameField[i][j]) {\n        continue;\n      }\n      moveCell(gameField, i, j, -1, 0);\n    }\n  }\n}\n\nfunction mergeUp(gameField) {\n  for (let i = 0; i < row - 1; i++) {\n    for (let j = 0; j < column; j++) {\n      if (!gameField[i][j]) {\n        continue;\n      }\n\n      if (gameField[i][j] === gameField[i + 1][j]) {\n        gameField[i][j] = gameField[i][j] * 2;\n        score += gameField[i][j];\n        gameField[i + 1][j] = 0;\n      }\n    }\n  }\n}\n\nfunction moveDown(gameField) {\n  for (let i = row - 1; i >= 0; i--) {\n    for (let j = 0; j < column; j++) {\n      if (!gameField[i][j]) {\n        continue;\n      }\n      moveCell(gameField, i, j, 1, 0);\n    }\n  }\n}\n\nfunction mergeDown(gameField) {\n  for (let i = row - 1; i > 0; i--) {\n    for (let j = 0; j < column; j++) {\n      if (!gameField[i][j]) {\n        continue;\n      }\n\n      if (gameField[i][j] === gameField[i - 1][j]) {\n        gameField[i][j] = gameField[i][j] * 2;\n        score += gameField[i][j];\n        gameField[i - 1][j] = 0;\n      }\n    }\n  }\n}\n\nfunction moveRight(gameField) {\n  for (let i = 0; i < row; i++) {\n    for (let j = column - 1; j >= 0; j--) {\n      if (!gameField[i][j]) {\n        continue;\n      }\n      moveCell(gameField, i, j, 0, 1);\n    }\n  }\n\n  return gameField;\n}\n\nfunction mergeRight(gameField) {\n  for (let i = 0; i < row; i++) {\n    for (let j = column - 1; j > 0; j--) {\n      if (!gameField[i][j]) {\n        continue;\n      }\n\n      if (gameField[i][j] === gameField[i][j - 1]) {\n        gameField[i][j] = gameField[i][j] * 2;\n        score += gameField[i][j];\n        gameField[i][j - 1] = 0;\n      }\n    }\n  }\n}\n\nfunction moveLeft(gameField) {\n  for (let i = 0; i < row; i++) {\n    for (let j = 0; j < column; j++) {\n      if (!gameField[i][j]) {\n        continue;\n      }\n      moveCell(gameField, i, j, 0, -1);\n    }\n  }\n}\n\nfunction mergeLeft(gameField) {\n  for (let i = 0; i < row; i++) {\n    for (let j = 0; j < column; j++) {\n      if (!gameField[i][j]) {\n        continue;\n      }\n\n      if (gameField[i][j] === gameField[i][j - 1]) {\n        gameField[i][j] = gameField[i][j] * 2;\n        score += gameField[i][j];\n        gameField[i][j - 1] = 0;\n      }\n    }\n  }\n}\n\nfunction move(e) {\n  if (!button.classList.contains('restart')) {\n    return;\n  }\n\n  const fieldCopy = field.map(function(arr) {\n    return arr.slice();\n  });\n\n  switch (e.key) {\n    case 'ArrowUp':\n      moveUp(field);\n      mergeUp(field);\n      moveUp(field);\n      break;\n\n    case 'ArrowDown':\n      moveDown(field);\n      mergeDown(field);\n      moveDown(field);\n      break;\n\n    case 'ArrowRight':\n      moveRight(field);\n      mergeRight(field);\n      moveRight(field);\n      break;\n\n    case 'ArrowLeft':\n      moveLeft(field);\n      mergeLeft(field);\n      moveLeft(field);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isFieldChanged(field, fieldCopy)) {\n    addRandomNumber(field);\n  }\n\n  renderField(field);\n}\n\nfunction isFieldChanged(gameField, gameFieldUpdated) {\n  for (let i = 0; i < row; i++) {\n    for (let j = 0; j < column; j++) {\n      if (gameField[i][j] !== gameFieldUpdated[i][j]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n"]}